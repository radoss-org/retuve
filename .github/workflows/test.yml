name: Lint & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    env:
      RETUVE_DISABLE_WARNING: "True"

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.5.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Add Poetry to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Create .venv directory
      run: mkdir -p .venv

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        poetry install
        pip install poethepoet

    - name: Check code formatting with black
      run: |
        poetry run poe format --check

    - name: Get all test plugins/data
      run: |
        poetry run poe testgetplugins

    - name: Generate test data and check for no changes
      run: |
        # Use a temporary file to capture output while also displaying it
        poetry run poe testgen 2>&1 | tee temp_output.txt
        output=$(cat temp_output.txt)
        rm temp_output.txt
        if ! echo "$output" | grep -q "No changes detected; no new release note created."; then
          echo "ERROR: Changes were detected in test data generation. This suggests code changes may have affected output."
          echo "Please review the changes and ensure they are intentional."
          exit 1
        fi
        echo "SUCCESS: No changes detected in test data generation."

    - name: Run tests
      run: |
        sudo rm -rf tmp/*
        poetry run poe test_all

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Set this in your repository secrets
        files: coverage.xml
        name: code-coverage-report
        fail_ci_if_error: true